<?php

if (is_int($a) || is_float($a)) {
	echo $a;
}
var_dump($a);
-----
Block#1
    Expr_FuncCall
        name: LITERAL('is_int')
        args[0]: Var#1<$a>
        result: Var#2
    Stmt_JumpIf
        cond: Var#2
        if: Block#2
        else: Block#3

Block#2
    Parent: Block#1
    Parent: Block#3
    Var#3 = Phi(LITERAL(true), Var#4)
    Stmt_JumpIf
        cond: Var#3
        if: Block#4
        else: Block#5

Block#3
    Parent: Block#1
    Expr_FuncCall
        name: LITERAL('is_float')
        args[0]: Var#1<$a>
        result: Var#5
    Expr_Cast_Bool
        expr: Var#5
        result: Var#4
    Stmt_Jump
        target: Block#2

Block#4
    Parent: Block#2
    Expr_Assertion<(type(LITERAL('int'))|type(LITERAL('float')))>
        expr: Var#1<$a>
        result: Var#6<$a>
    Terminal_Echo
        expr: Var#6<$a>
    Stmt_Jump
        target: Block#6

Block#5
    Parent: Block#2
    Expr_Assertion<not((type(LITERAL('int'))|type(LITERAL('float'))))>
        expr: Var#1<$a>
        result: Var#7<$a>
    Stmt_Jump
        target: Block#6

Block#6
    Parent: Block#4
    Parent: Block#5
    Var#8<$a> = Phi(Var#6<$a>, Var#7<$a>)
    Expr_FuncCall
        name: LITERAL('var_dump')
        args[0]: Var#8<$a>
        result: Var#9
    Terminal_Return
        expr: LITERAL(1)