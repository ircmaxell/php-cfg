<?php
echo match(10) {
    1 => 'foo',
    5 => 'bar',
    5 + 5 => 'baz' . 'buz',
};
-----
Block#1
    Expr_BinaryOp_Identical
        left: LITERAL(1)
        right: LITERAL(10)
        result: TEMP(#1)
    Stmt_JumpIf
        cond: TEMP(#1)
        if: Block#2
        else: Block#3

Block#2
    Parent: Block#1
    Expr_Assign
        var: TEMP(#2)
        expr: LITERAL('foo')
        result: TEMP(#3)
    Stmt_Jump
        target: Block#4

Block#3
    Parent: Block#1
    Expr_BinaryOp_Identical
        left: LITERAL(5)
        right: LITERAL(10)
        result: TEMP(#4)
    Stmt_JumpIf
        cond: TEMP(#4)
        if: Block#5
        else: Block#6

Block#4
    Parent: Block#2
    Parent: Block#5
    Parent: Block#7
    TEMP(#5) = Phi(TEMP(#2), TEMP(#6), TEMP(#7))
    Terminal_Echo
        expr: TEMP(#5)
    Terminal_Return

Block#5
    Parent: Block#3
    Expr_Assign
        var: TEMP(#6)
        expr: LITERAL('bar')
        result: TEMP(#8)
    Stmt_Jump
        target: Block#4

Block#6
    Parent: Block#3
    Expr_BinaryOp_Plus
        left: LITERAL(5)
        right: LITERAL(5)
        result: TEMP(#9)
    Expr_BinaryOp_Identical
        left: TEMP(#9)
        right: LITERAL(10)
        result: TEMP(#10)
    Stmt_JumpIf
        cond: TEMP(#10)
        if: Block#7
        else: Block#8

Block#7
    Parent: Block#6
    Expr_BinaryOp_Concat
        left: LITERAL('baz')
        right: LITERAL('buz')
        result: TEMP(#7)
    Stmt_Jump
        target: Block#4

Block#8
    Parent: Block#6
    Terminal_MatchError
        cond: LITERAL(10)
