<?php

try {
    if(doBar()) {
        throw new Exception('foo');
    } else if(doFoo()) {
        doFi();
    } else {
        doFi();
    }
} catch (Exception $e) {
    return $e;
} finally {
    return 'finally';
}
-----
Block#1
    Stmt_Try
        catchTypes[0]: Exception
        catchVars[0]: TEMP(#1 <VARIABLE($e)>)
        body: Block#2
        catch[0]: Block#3
        finally: Block#4

Block#2
    Parent: Block#1
        catchTarget<Exception>(TEMP(#1 <VARIABLE($e)>)): Block#3
        finallyTarget: Block#4
    Expr_FuncCall
        name: LITERAL('doBar')
        result: TEMP(#2)
    Stmt_JumpIf
        cond: TEMP(#2)
        if: Block#5
        else: Block#6

Block#3
    Parent: Block#2
    Parent: Block#9
    Parent: Block#5
    Parent: Block#6
    Parent: Block#7
    Parent: Block#8
        finallyTarget: Block#4
    TEMP(#3 <VARIABLE($e)>) = Phi(TEMP(#1 <VARIABLE($e)>), TEMP(#4 <VARIABLE($e)>), TEMP(#5 <VARIABLE($e)>))
    Terminal_Return
        expr: TEMP(#3 <VARIABLE($e)>)

Block#4
    Parent: Block#2
    Parent: Block#3
    Parent: Block#9
    Parent: Block#5
    Parent: Block#6
    Parent: Block#7
    Parent: Block#8
    Terminal_Return
        expr: LITERAL('finally')

Block#5
    Parent: Block#2
        catchTarget<Exception>(TEMP(#1 <VARIABLE($e)>)): Block#3
        finallyTarget: Block#4
    Expr_New
        class: LITERAL('Exception')
        args[0]: LITERAL('foo')
        result: TEMP(#6)
    Terminal_Throw
        expr: TEMP(#6)

Block#6
    Parent: Block#2
        catchTarget<Exception>(TEMP(#1 <VARIABLE($e)>)): Block#3
        finallyTarget: Block#4
    Expr_FuncCall
        name: LITERAL('doFoo')
        result: TEMP(#7)
    Stmt_JumpIf
        cond: TEMP(#7)
        if: Block#7
        else: Block#8

Block#7
    Parent: Block#6
        catchTarget<Exception>(TEMP(#1 <VARIABLE($e)>)): Block#3
        finallyTarget: Block#4
    Expr_FuncCall
        name: LITERAL('doFi')
        result: TEMP(#8)
    Stmt_Jump
        target: Block#9

Block#8
    Parent: Block#6
        catchTarget<Exception>(TEMP(#1 <VARIABLE($e)>)): Block#3
        finallyTarget: Block#4
    Expr_FuncCall
        name: LITERAL('doFi')
        result: TEMP(#9)
    Stmt_Jump
        target: Block#9

Block#9
    Parent: Block#7
    Parent: Block#8
        catchTarget<Exception>(TEMP(#1 <VARIABLE($e)>)): Block#3
        finallyTarget: Block#4
    Stmt_Jump
        target: Block#4